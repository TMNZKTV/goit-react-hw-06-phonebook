{"version":3,"sources":["Component/Filter/Filter.module.css","Component/СontactForm/ContactForm.js","Component/ContactList/ContactList.js","Component/Filter/Filter.js","App.js","index.js","Component/СontactForm/ContactForm.module.css","Component/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSumbit","preventDefault","reset","props","addContact","onSubmit","this","className","styles","form__label","form__input","type","pattern","title","required","onChange","form__button","Component","ContactList","contacts","onDeleteContact","map","id","contacts__item","contacts__button","onClick","Filter","filter__input","App","filter","data","newContact","uuidv4","normalizedContact","toLowerCase","some","contact","alert","prevState","deleteContact","contactId","changeFilter","e","getVisibleContacts","normalizedFilter","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,cAAgB,gC,sJCkEnBC,E,4MA/DXC,MAAQ,CACJC,KAAM,GACNC,OAAQ,I,EAGZC,aAAe,SAAAC,GAAU,IAAD,EACIA,EAAMC,cAAtBJ,EADY,EACZA,KAAMK,EADM,EACNA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG5BE,aAAe,SAAAJ,GACXA,EAAMK,iBACN,EAAKC,QACL,EAAKC,MAAMC,WAAW,EAAKZ,Q,EAG/BU,MAAQ,WACJ,EAAKH,SAAS,CACVN,KAAM,GACNC,OAAQ,M,4CAIhB,WACI,OACI,mCACI,uBAAMW,SAAUC,KAAKN,aAArB,UACI,wBAAOO,UAAWC,IAAOC,YAAzB,iBAEI,uBACIF,UAAWC,IAAOE,YAClBC,KAAK,OACLlB,KAAK,OACLmB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRhB,MAAOQ,KAAKd,MAAMC,KAClBsB,SAAUT,KAAKX,kBAIvB,wBAAOY,UAAWC,IAAOC,YAAzB,mBAEI,uBACIF,UAAWC,IAAOE,YAClBC,KAAK,MACLlB,KAAK,SAELoB,MAAM,mlBACNC,UAAQ,EACRhB,MAAOQ,KAAKd,MAAME,OAClBqB,SAAUT,KAAKX,kBAGvB,wBAAQY,UAAWC,IAAOQ,aAAcL,KAAK,SAA7C,kC,GAvDMM,a,gBCkCXC,EAjCK,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAC7B,OACI,oBAAIb,UAAWC,IAAOW,SAAtB,SACKA,EAASE,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAI7B,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACvB,OACI,qBAAIa,UAAWC,IAAOe,eAAtB,UACI,iCACK9B,EADL,MACcC,KAEd,wBACIa,UAAWC,IAAOgB,iBAClBC,QAAS,kBAAML,EAAgBE,IAFnC,0DAJuCA,S,iBCehDI,EApBA,SAAC,GAAyB,IAAvBX,EAAsB,EAAtBA,SAAUjB,EAAY,EAAZA,MACxB,OACI,0DAEI,uBACIS,UAAWC,IAAOmB,cAClBhB,KAAK,OACLlB,KAAK,SACLK,MAAOA,EACPiB,SAAUA,QCkEXa,E,4MAtEXpC,MAAQ,CACJ2B,SAAU,CACN,CAAEG,GAAI,OAAQ7B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAE4B,GAAI,OAAQ7B,KAAM,iBAAkBC,OAAQ,aAC9C,CAAE4B,GAAI,OAAQ7B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAE4B,GAAI,OAAQ7B,KAAM,iBAAkBC,OAAQ,cAElDmC,OAAQ,I,EAGZzB,WAAa,SAAA0B,GACT,IAAMC,EAAa,CACftC,KAAMqC,EAAKrC,KACXC,OAAQoC,EAAKpC,OACb4B,GAAIU,eAEFC,EAAoBF,EAAWtC,KAAKyC,cAE1C,EAAK1C,MAAM2B,SAASgB,MAChB,SAAAC,GAAO,OAAIA,EAAQ3C,KAAKyC,gBAAkBD,KAExCI,MAAM,GAAD,OAAIP,EAAKrC,KAAT,6BACL,EAAKM,UAAS,SAAAuC,GAAS,MAAK,CACxBnB,SAAS,CAAEY,GAAH,mBAAkBO,EAAUnB,gB,EAIlDoB,cAAgB,SAAAC,GACZ,EAAKzC,UAAS,SAAAuC,GAAS,MAAK,CACxBnB,SAAUmB,EAAUnB,SAASU,QACzB,SAAAO,GAAO,OAAIA,EAAQd,KAAOkB,U,EAItCC,aAAe,SAAAC,GACX,EAAK3C,SAAS,CAAE8B,OAAQa,EAAE7C,cAAcC,S,EAG5C6C,mBAAqB,WAAO,IAAD,EACM,EAAKnD,MAA1BqC,EADe,EACfA,OAAQV,EADO,EACPA,SACVyB,EAAmBf,EAAOK,cAEhC,OAAOf,EAASU,QAAO,SAAAO,GAAO,OAC1BA,EAAQ3C,KAAKyC,cAAcW,SAASD,O,4CAI5C,WACI,IAAME,EAAkBxC,KAAKqC,qBAE7B,OACI,gCACI,2CACA,cAAC,EAAD,CAAavC,WAAYE,KAAKF,aAE9B,0CACA,cAAC,EAAD,CACIW,SAAUT,KAAKmC,aACf3C,MAAOQ,KAAKd,MAAMqC,SAGtB,cAAC,EAAD,CACIV,SAAU2B,EACV1B,gBAAiBd,KAAKiC,uB,GAhExBtB,aCJlB8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1B9D,EAAOC,QAAU,CAAC,YAAc,iCAAiC,aAAe,oC,kBCAhFD,EAAOC,QAAU,CAAC,SAAW,8BAA8B,eAAiB,oCAAoC,iBAAmB,yC","file":"static/js/main.358aab21.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__input\":\"Filter_filter__input__CMHC3\"};","import React, { Component } from 'react';\nimport styles from '../СontactForm/ContactForm.module.css';\n\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: '',\n    };\n\n    handleChange = event => {\n        const { name, value } = event.currentTarget;\n        this.setState({ [name]: value });\n    };\n\n    handleSumbit = event => {\n        event.preventDefault();\n        this.reset();\n        this.props.addContact(this.state);\n    };\n\n    reset = () => {\n        this.setState({\n            name: '',\n            number: '',\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <form onSubmit={this.handleSumbit}>\n                    <label className={styles.form__label}>\n                        Name\n                        <input\n                            className={styles.form__input}\n                            type=\"text\"\n                            name=\"name\"\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                            required\n                            value={this.state.name}\n                            onChange={this.handleChange}\n                        />\n                    </label>\n\n                    <label className={styles.form__label}>\n                        Number\n                        <input\n                            className={styles.form__input}\n                            type=\"tel\"\n                            name=\"number\"\n                            // pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n                            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n                            required\n                            value={this.state.number}\n                            onChange={this.handleChange}\n                        />\n                    </label>\n                    <button className={styles.form__button} type=\"submit\">\n                        Add contact\n                    </button>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport styles from '../ContactList/ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n    return (\n        <ul className={styles.contacts}>\n            {contacts.map(({ id, name, number }) => {\n                return (\n                    <li className={styles.contacts__item} key={id}>\n                        <span>\n                            {name} : {number}\n                        </span>\n                        <button\n                            className={styles.contacts__button}\n                            onClick={() => onDeleteContact(id)}\n                        >\n                            Удалить\n                        </button>\n                    </li>\n                );\n            })}\n        </ul>\n    );\n};\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        }),\n    ),\n    onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport styles from '../Filter/Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ onChange, value }) => {\n    return (\n        <label>\n            Find contacts by name\n            <input\n                className={styles.filter__input}\n                type=\"text\"\n                name=\"search\"\n                value={value}\n                onChange={onChange}\n            />\n        </label>\n    );\n};\n\nFilter.propTypes = {\n    onChange: PropTypes.func,\n    value: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\n// Components\nimport ContactForm from './Component/СontactForm/ContactForm';\nimport ContactList from './Component/ContactList/ContactList';\nimport Filter from './Component/Filter/Filter';\n\nclass App extends Component {\n    state = {\n        contacts: [\n            { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n            { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n            { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n        ],\n        filter: '',\n    };\n\n    addContact = data => {\n        const newContact = {\n            name: data.name,\n            number: data.number,\n            id: uuidv4(),\n        };\n        const normalizedContact = newContact.name.toLowerCase();\n\n        this.state.contacts.some(\n            contact => contact.name.toLowerCase() === normalizedContact,\n        )\n            ? alert(`${data.name} is already in Contacts!`)\n            : this.setState(prevState => ({\n                  contacts: [newContact, ...prevState.contacts],\n              }));\n    };\n\n    deleteContact = contactId => {\n        this.setState(prevState => ({\n            contacts: prevState.contacts.filter(\n                contact => contact.id !== contactId,\n            ),\n        }));\n    };\n    changeFilter = e => {\n        this.setState({ filter: e.currentTarget.value });\n    };\n\n    getVisibleContacts = () => {\n        const { filter, contacts } = this.state;\n        const normalizedFilter = filter.toLowerCase();\n\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedFilter),\n        );\n    };\n\n    render() {\n        const visibleContacts = this.getVisibleContacts();\n\n        return (\n            <div>\n                <h1>Phonebook</h1>\n                <ContactForm addContact={this.addContact} />\n\n                <h2>Contacts</h2>\n                <Filter\n                    onChange={this.changeFilter}\n                    value={this.state.filter}\n                />\n\n                <ContactList\n                    contacts={visibleContacts}\n                    onDeleteContact={this.deleteContact}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__input\":\"ContactForm_form__input__1wcVG\",\"form__button\":\"ContactForm_form__button__1c0Ls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__3nnnn\",\"contacts__item\":\"ContactList_contacts__item__21SKQ\",\"contacts__button\":\"ContactList_contacts__button__3KK4z\"};"],"sourceRoot":""}