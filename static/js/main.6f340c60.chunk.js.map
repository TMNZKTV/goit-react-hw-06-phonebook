{"version":3,"sources":["Component/Filter/Filter.module.css","Redux/Phonebook/phonebook-types.js","Redux/Phonebook/phonebook-actions.js","Component/СontactForm/ContactForm.js","Component/ContactList/ContactList.js","Component/Filter/Filter.js","App.js","Redux/Phonebook/phonebook-reducer.js","Redux/store.js","index.js","Component/СontactForm/ContactForm.module.css","Component/ContactList/ContactList.module.css"],"names":["module","exports","data","type","types","payload","name","number","id","uuidv4","contactId","value","ContactForm","state","handleChange","event","currentTarget","setState","handleSumbit","preventDefault","reset","checkDuplicateContacts","props","onSubmit","newContact","existedContacts","isDuplicateNumber","find","isDuplicateName","toLowerCase","alert","this","className","styles","form__label","form__input","pattern","title","required","onChange","form__button","Component","connect","phonebook","items","dispatch","text","phonebookActions","getVisibleItems","allItems","filter","normalizedFilter","item","includes","onDeleteContact","contacts","map","contacts__item","contacts__button","onClick","e","filter__input","App","initialItems","combineReducers","roodReducer","phonebookReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f340c60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__input\":\"Filter_filter__input__CMHC3\"};","export default {\n  ADD: \"phonebook/add\",\n  DELETE: \"phonebook/delete\",\n  CHANGE_FILTER: \"phonebook/change\",\n};\n","import types from \"./phonebook-types\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst addContact = (data) => ({\n  type: types.ADD,\n  payload: {\n    name: data.name,\n    number: data.number,\n    id: uuidv4(),\n  },\n});\n\nconst deleteContact = (contactId) => ({\n  type: types.DELETE,\n  payload: contactId,\n});\n\nconst changeFilter = (value) => ({\n  type: types.CHANGE_FILTER,\n  payload: value,\n});\n\nexport default { addContact, deleteContact, changeFilter };\n","import React, { Component } from \"react\";\nimport styles from \"../СontactForm/ContactForm.module.css\";\nimport { connect } from \"react-redux\";\nimport phonebookActions from \"../../Redux/Phonebook/phonebook-actions\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSumbit = (event) => {\n    event.preventDefault();\n    this.reset();\n\n    if (this.checkDuplicateContacts(this.state)) {\n      return;\n    }\n    this.props.onSubmit(this.state);\n  };\n\n  checkDuplicateContacts = (newContact) => {\n    const { existedContacts } = this.props;\n    const isDuplicateNumber = existedContacts.find(\n      ({ number }) => number === newContact.number\n    );\n    const isDuplicateName = existedContacts.find(\n      ({ name }) => name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (isDuplicateNumber || isDuplicateName) {\n      alert(\"This number is already in contacts.\");\n      return true;\n    }\n  };\n\n  reset = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.handleSumbit}>\n          <label className={styles.form__label}>\n            Name\n            <input\n              className={styles.form__input}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label className={styles.form__label}>\n            Number\n            <input\n              className={styles.form__input}\n              type=\"tel\"\n              name=\"number\"\n              // pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n              required\n              value={this.state.number}\n              onChange={this.handleChange}\n            />\n          </label>\n          <button className={styles.form__button} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  existedContacts: state.phonebook.items,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (text) => dispatch(phonebookActions.addContact(text)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport styles from '../ContactList/ContactList.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport phonebookActions from '../../Redux/Phonebook/phonebook-actions';\n\nconst ContactList = ({ items, onDeleteContact }) => {\n    return (\n        <ul className={styles.contacts}>\n            {items.map(({ id, name, number }) => {\n                return (\n                    <li className={styles.contacts__item} key={id}>\n                        <span>\n                            {name} : {number}\n                        </span>\n                        <button\n                            className={styles.contacts__button}\n                            onClick={() => onDeleteContact(id)}\n                        >\n                            Удалить\n                        </button>\n                    </li>\n                );\n            })}\n        </ul>\n    );\n};\n\nconst getVisibleItems = (allItems, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return allItems.filter(item =>\n        item.name.toLowerCase().includes(normalizedFilter),\n    );\n};\n\nconst mapStateToProps = ({ phonebook: { items, filter } }) => ({\n    items: getVisibleItems(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onDeleteContact: id => dispatch(phonebookActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        }),\n    ),\n    onDeleteContact: PropTypes.func,\n};\n","import React from \"react\";\nimport styles from \"../Filter/Filter.module.css\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport phonebookActions from \"../../Redux/Phonebook/phonebook-actions\";\n\nconst Filter = ({ onChange, value }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input\n        className={styles.filter__input}\n        type=\"text\"\n        name=\"search\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.phonebook.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) =>\n    dispatch(phonebookActions.changeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\n\n// Components\nimport ContactForm from './Component/СontactForm/ContactForm';\nimport ContactList from './Component/ContactList/ContactList';\nimport Filter from './Component/Filter/Filter';\n\nconst App = () => {\n    return (\n        <div>\n            <h1>Phonebook</h1>\n            <ContactForm />\n\n            <h2>Contacts</h2>\n            <Filter />\n\n            <ContactList />\n        </div>\n    );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport types from \"./phonebook-types\";\n\nconst initialItems = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nconst items = (state = initialItems, { type, payload }) => {\n  switch (type) {\n    case types.ADD:\n      return [...state, payload];\n\n    case types.DELETE:\n      return state.filter(({ id }) => id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = \"\", { type, payload }) => {\n  switch (type) {\n    case types.CHANGE_FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { createStore, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport phonebookReducer from \"../Redux/Phonebook/phonebook-reducer\";\n\nconst roodReducer = combineReducers({\n  phonebook: phonebookReducer,\n});\n\nconst store = createStore(roodReducer, composeWithDevTools());\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./Redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__input\":\"ContactForm_form__input__1wcVG\",\"form__button\":\"ContactForm_form__button__1c0Ls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__3nnnn\",\"contacts__item\":\"ContactList_contacts__item__21SKQ\",\"contacts__button\":\"ContactList_contacts__button__3KK4z\"};"],"sourceRoot":""}