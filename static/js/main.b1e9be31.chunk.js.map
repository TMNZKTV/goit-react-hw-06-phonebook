{"version":3,"sources":["Component/ContactList/ContactList.module.css","Component/Filter/Filter.module.css","Redux/Phonebook/phonebook-actions.js","Component/СontactForm/ContactForm.js","Component/ContactList/ContactList.js","Component/Filter/Filter.js","App.js","Redux/Phonebook/phonebook-reducer.js","Redux/store.js","index.js","Component/СontactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","data","payload","name","number","id","uuidv4","deleteContact","changeFilter","ContactForm","state","handleChange","event","currentTarget","value","setState","handleSumbit","preventDefault","reset","checkDuplicateContacts","props","onSubmit","newContact","existedContacts","isDuplicateNumber","find","isDuplicateName","toLowerCase","alert","this","className","styles","form__label","form__input","type","pattern","title","required","onChange","form__button","Component","connect","phonebook","items","dispatch","text","phonebookActions","getVisibleItems","allItems","filter","normalizedFilter","item","includes","onDeleteContact","contacts","map","contacts__item","contacts__button","onClick","e","filter__input","App","createReducer","actions","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","itemsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b1e9be31.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__3nnnn\",\"contacts__item\":\"ContactList_contacts__item__21SKQ\",\"contacts__button\":\"ContactList_contacts__button__3KK4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__input\":\"Filter_filter__input__CMHC3\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('phonebook/add', data => ({\n    payload: {\n        name: data.name,\n        number: data.number,\n        id: uuidv4(),\n    },\n}));\n\nconst deleteContact = createAction('phonebook/delete');\n\nconst changeFilter = createAction('phonebook/filter');\n\nexport default { addContact, deleteContact, changeFilter };\n\n// const addContact = data => ({\n//     type: types.ADD,\n//     payload: {\n//         name: data.name,\n//         number: data.number,\n//         id: uuidv4(),\n//     },\n// });\n\n// const deleteContact = contactId => ({\n//     type: types.DELETE,\n//     payload: contactId,\n// });\n\n// const changeFilter = value => ({\n//     type: types.CHANGE_FILTER,\n//     payload: value,\n// });\n","import React, { Component } from \"react\";\nimport styles from \"../СontactForm/ContactForm.module.css\";\nimport { connect } from \"react-redux\";\nimport phonebookActions from \"../../Redux/Phonebook/phonebook-actions\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSumbit = (event) => {\n    event.preventDefault();\n    this.reset();\n\n    if (this.checkDuplicateContacts(this.state)) {\n      return;\n    }\n    this.props.onSubmit(this.state);\n  };\n\n  checkDuplicateContacts = (newContact) => {\n    const { existedContacts } = this.props;\n    const isDuplicateNumber = existedContacts.find(\n      ({ number }) => number === newContact.number\n    );\n    const isDuplicateName = existedContacts.find(\n      ({ name }) => name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (isDuplicateNumber || isDuplicateName) {\n      alert(\"This number is already in contacts.\");\n      return true;\n    }\n  };\n\n  reset = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.handleSumbit}>\n          <label className={styles.form__label}>\n            Name\n            <input\n              className={styles.form__input}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label className={styles.form__label}>\n            Number\n            <input\n              className={styles.form__input}\n              type=\"tel\"\n              name=\"number\"\n              // pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n              required\n              value={this.state.number}\n              onChange={this.handleChange}\n            />\n          </label>\n          <button className={styles.form__button} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  existedContacts: state.phonebook.items,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (text) => dispatch(phonebookActions.addContact(text)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport styles from '../ContactList/ContactList.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport phonebookActions from '../../Redux/Phonebook/phonebook-actions';\n\nconst ContactList = ({ items, onDeleteContact }) => {\n    return (\n        <ul className={styles.contacts}>\n            {items.map(({ id, name, number }) => {\n                return (\n                    <li className={styles.contacts__item} key={id}>\n                        <span>\n                            {name} : {number}\n                        </span>\n                        <button\n                            className={styles.contacts__button}\n                            onClick={() => onDeleteContact(id)}\n                        >\n                            Удалить\n                        </button>\n                    </li>\n                );\n            })}\n        </ul>\n    );\n};\n\nconst getVisibleItems = (allItems, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return allItems.filter(item =>\n        item.name.toLowerCase().includes(normalizedFilter),\n    );\n};\n\nconst mapStateToProps = ({ phonebook: { items, filter } }) => ({\n    items: getVisibleItems(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onDeleteContact: id => dispatch(phonebookActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        }),\n    ),\n    onDeleteContact: PropTypes.func,\n};\n","import React from \"react\";\nimport styles from \"../Filter/Filter.module.css\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport phonebookActions from \"../../Redux/Phonebook/phonebook-actions\";\n\nconst Filter = ({ onChange, value }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input\n        className={styles.filter__input}\n        type=\"text\"\n        name=\"search\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.phonebook.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) =>\n    dispatch(phonebookActions.changeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\n\n// Components\nimport ContactForm from './Component/СontactForm/ContactForm';\nimport ContactList from './Component/ContactList/ContactList';\nimport Filter from './Component/Filter/Filter';\n\nconst App = () => {\n    return (\n        <div>\n            <h1>Phonebook</h1>\n            <ContactForm />\n\n            <h2>Contacts</h2>\n            <Filter />\n\n            <ContactList />\n        </div>\n    );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from '../Phonebook/phonebook-actions';\n\nconst initialItems = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\nconst items = createReducer(initialItems, {\n    [actions.addContact]: (state, { payload }) => [...state, payload],\n    [actions.deleteContact]: (state, { payload }) =>\n        state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n    [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n    items,\n    filter,\n});\n\n// const items = (state = initialItems, { type, payload }) => {\n//     switch (type) {\n//         case types.ADD:\n//             return [...state, payload];\n\n//         case types.DELETE:\n//             return state.filter(({ id }) => id !== payload);\n\n//         default:\n//             return state;\n//     }\n// };\n\n// const filter = (state = '', { type, payload }) => {\n//     switch (type) {\n//         case [actions.changeFilter]:\n//             return payload;\n\n//         default:\n//             return state;\n//     }\n// };\n","import {\n    configureStore,\n    getDefaultMiddleware,\n    combineReducers,\n} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phonebookReducer from '../Redux/Phonebook/phonebook-reducer';\n\nconst middleware = [\n    ...getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n    }),\n    logger,\n];\n\nconst itemsPersistConfig = {\n    key: 'items',\n    storage,\n    blacklist: ['filter'],\n};\n\nconst store = configureStore({\n    reducer: {\n        phonebook: persistReducer(itemsPersistConfig, phonebookReducer),\n    },\n    devTools: process.env.NODE_ENV === 'development',\n    middleware,\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './Redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store.store}>\n            <PersistGate loading={null} persistor={store.persistor}>\n                <App />\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__input\":\"ContactForm_form__input__1wcVG\",\"form__button\":\"ContactForm_form__button__1c0Ls\"};"],"sourceRoot":""}